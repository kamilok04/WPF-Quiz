<UserControl x:Class="Rozwiazywarka.View.AnswerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rozwiazywarka.View"    
             xmlns:viewmodel="clr-namespace:Rozwiazywarka.ViewModel"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type viewmodel:AnswerViewModel}, IsDesignTimeCreatable=True}"
             d:DesignHeight="768" d:DesignWidth="1024"

>
    <UserControl.Resources>

        <viewmodel:AnswerStyleConverter x:Key="AnswerStyleConverter"/>
        <viewmodel:AnswerConverter x:Key="AnswerConverter"/>
        <viewmodel:GetIndexMultiConverter x:Key="IndexConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"   />
        <viewmodel:BoolToInvisibility x:Key="BoolToInvisibility"   />
        <viewmodel:AnswerCommentaryConverter x:Key="AnswerCommentaryConverter"/>



        <Style TargetType="{x:Type Button}" x:Key="AnswerStyle">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Background changes based on selected/answered property -->
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <PriorityBinding>
                            <Binding Path="IsSelected"/>
                            <Binding Path="IsAnswered"/>
                        </PriorityBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="#3F008000"/>
                </DataTrigger>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <PriorityBinding>
                            <Binding Path="IsSelected"/>
                            <Binding Path="IsAnswered"/>
                        </PriorityBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="#3FFF0000"/>

                </DataTrigger>

                <!-- Hover effect when IsSelected is True -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">
                            <Condition.Binding>
                                <PriorityBinding>
                                    <Binding Path="IsSelected"/>
                                    <Binding Path="IsAnswered"/>
                                </PriorityBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#5F00FF00"/>
                </MultiDataTrigger>

                <!-- Hover effect when IsSelected is False -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="False">

                            <Condition.Binding>
                                <PriorityBinding>
                                    <Binding Path="IsSelected"/>
                                    <Binding Path="IsAnswered"/>
                                </PriorityBinding>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#5FFF0000"/>
                </MultiDataTrigger>

            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="OverlayStyle">
            <Style.Triggers>

                <DataTrigger Binding="{Binding QuizInProgress}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding EnableAnswering}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>

            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type Button}" x:Key="QuestionSelectionStyle" BasedOn="{StaticResource AnswerStyle}">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <Binding Path="IsCurrent"/>

                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="#3FFFFF00"/>

                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True">

                            <Condition.Binding>
                                <Binding Path="IsCurrent"/>
                            </Condition.Binding>
                        </Condition>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#5FFFFF00"/>
                </MultiDataTrigger>

            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <!--<UserControl.DataContext>
        <viewmodel:AnswerViewModel></viewmodel:AnswerViewModel>
    </UserControl.DataContext>-->

    <Grid >
        <Grid Name="Overlay" Grid.ColumnSpan="2" Panel.ZIndex="2" d:IsHidden="True" Style="{StaticResource OverlayStyle}"
>
            <Grid.Background>
                <SolidColorBrush Color="WhiteSmoke" Opacity="0.5"/>
            </Grid.Background>
            <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label  DockPanel.Dock="Top" FontFamily="Comic Sans MS" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="24">Naciśnij przycisk, aby rozpocząć quiz.</Label>
                <Label DockPanel.Dock="Top" FontFamily="Comic Sans MS" HorizontalAlignment="Center" VerticalAlignment="Stretch" FontSize="18" FontWeight="Bold">Rozpoczęcie quizu uruchomi zegar.</Label>
                <Button DockPanel.Dock="Top" Padding="2" Command="{Binding StartQuiz}">Rozpocznij quiz :)</Button>
            </DockPanel>
        </Grid>
        <Grid x:Name="MainGrid">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding EnableAnswering}" Value="True"/>
                                <Condition Binding="{Binding QuizInProgress}" Value="False"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="Effect">
                                <Setter.Value>
                                    <BlurEffect Radius="12" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="NavigationGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>


                <Button FontSize="18" FontWeight="Bold" FontFamily="Comic Sans MS" Content="Wyjście" Command="{Binding StopQuiz}" Visibility="{Binding EnableAnswering, Converter={StaticResource BoolToVisibility}, FallbackValue=Visible}"/>
                <Label FontSize ="18" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Row="1" Content="Wybór pytania"/>
                <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" VerticalAlignment="Top" VerticalContentAlignment="Top">
                    <UniformGrid x:Name="SelectionGrid" >
                        <ItemsControl ItemsSource="{Binding QuizStatus.Questions}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="6" VerticalAlignment="Stretch"/>

                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Command="{Binding Path=DataContext.SelectQuestion, 
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding Index}"
                                    Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                                    Style="{StaticResource QuestionSelectionStyle}">
                                        <Button.Content>
                                            <Label HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                                                <Label.Content>
                                                    <MultiBinding Converter="{StaticResource IndexConverter}">
                                                        <Binding/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" Path="ItemsSource"/>
                                                    </MultiBinding>
                                                </Label.Content>
                                            </Label>
                                        </Button.Content>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </UniformGrid>
                </ScrollViewer>
            </Grid>

            <Grid Grid.Column="1" Name="GameGrid" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Label FontFamily="Comic Sans MS"  FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding EnableAnswering, Converter={StaticResource BoolToVisibility},FallbackValue=Visible}" Content="{Binding TimeString}" ContentStringFormat="{}Upłynęło: {0}"/>
                    <TextBlock FontFamily="Comic Sans MS" FontSize="20" FontWeight="Bold" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding EnableAnswering, Converter={StaticResource BoolToVisibility},FallbackValue=Visible}" Text="{Binding QuizStatus.Name}" TextWrapping="Wrap"/>
                </Grid>
                <Grid x:Name="AnswerGrid" VerticalAlignment="Stretch" Grid.Row="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="1*"/>

                    </Grid.RowDefinitions>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Padding="4">
                        <TextBlock FontSize="25" FontFamily="Comic Sans MS" VerticalAlignment="Center" HorizontalAlignment="Center"  Text="{Binding CurrentQuestion.Question.Text, FallbackValue='Pytanie?'}" TextWrapping="Wrap"/>
                    </ScrollViewer>
                    <ItemsControl x:Name="AnswerList" ItemsSource="{Binding CurrentAnswers}" Grid.Row="1">
                        <ItemsControl.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.EnableAnswering, RelativeSource={RelativeSource AncestorType={x:Type local:AnswerView}}}" 
                                                   Value="False">

                                        <Setter Property="Grid.ColumnSpan" Value="2"/>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Command="{Binding DataContext.SelectAnswer, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  
                                       CommandParameter="{Binding}" Style="{StaticResource AnswerStyle}" HorizontalContentAlignment="Stretch">
                                    <DockPanel >

                                        <Grid DockPanel.Dock="Left" x:Name="AnswerChoice">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="10*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label x:Name="AnswerKey">
                                                <MultiBinding Converter="{StaticResource AnswerConverter}">
                                                    <Binding Path="."/>
                                                    <Binding ElementName="AnswerList" Path="ItemsSource"/>
                                                </MultiBinding>
                                            </Label>

                                            <Label Grid.Column="1" Content="{Binding Answer.Text}"/>
                                        </Grid>
                                        <Label 
                                            FontStyle="Italic"
                                            DockPanel.Dock="Right"
                                            HorizontalAlignment="Right"
                                            HorizontalContentAlignment="Right"
                                            Visibility="{Binding DataContext.EnableAnswering, RelativeSource={RelativeSource AncestorType={x:Type local:AnswerView}}, Converter={StaticResource BoolToInvisibility}, FallbackValue=Collapsed}">
                                            <Label.Content>
                                                <MultiBinding Converter="{StaticResource AnswerCommentaryConverter}">
                                                    <Binding Path="Answer.IsCorrect"/>
                                                    <Binding Path="IsSelected"/>
                                                </MultiBinding>

                                            </Label.Content>

                                        </Label>
                                    </DockPanel>



                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Button FontSize="18" Visibility="{Binding EnableAnswering, Converter={StaticResource BoolToVisibility}, FallbackValue=Visible}" Grid.Column="1" Grid.Row="1"  Command="{Binding ConfirmAnswer}" CommandParameter="1" HorizontalAlignment="Stretch" >
                        <TextBlock TextWrapping="Wrap">
                            Zapisz i&#160;dalej&#160;&gt;
                        </TextBlock>
                    </Button>
                    <Button FontSize="18" Visibility="{Binding EnableAnswering, Converter={StaticResource BoolToVisibility}, FallbackValue=Visible}" Grid.Column="1" Grid.Row="2" Grid.RowSpan="1"  Command="{Binding ConfirmAnswer}" CommandParameter="0" Content="Zapisz"/>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Grid.Row="3">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.EnableAnswering, RelativeSource={RelativeSource AncestorType={x:Type local:AnswerView}}}" 
                       Value="False">

                                        <Setter Property="Grid.ColumnSpan" Value="2"/>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}Pytanie {0} z {1}">
                                <Binding Path="CurrentQuestionIndexFormatted" FallbackValue="0"></Binding>
                                <Binding Path="QuizStatus.TotalQuestions" FallbackValue="1"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Grid>
        </Grid>
    </Grid>


</UserControl>
